{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/Users/sonamdorjighalley/Desktop/SS2025_SWE201_PINTEREST/screens/FeedScreen.tsx\";\nimport { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { supabase } from \"../lib/supabase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FeedScreen() {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedPost, setSelectedPost] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n  const [currentUserId, setCurrentUserId] = useState(\"\");\n  useEffect(() => {\n    getCurrentUser();\n    fetchPosts();\n  }, []);\n  async function getCurrentUser() {\n    const {\n      data: {\n        user\n      }\n    } = await supabase.auth.getUser();\n    if (user) setCurrentUserId(user.id);\n  }\n  async function fetchPosts() {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from(\"posts\").select(`\n          *,\n          profiles (username, full_name, avatar_url),\n          likes (id, user_id),\n          comments (id)\n        `).order(\"created_at\", {\n        ascending: false\n      });\n      if (error) throw error;\n      const postsWithCounts = data?.map(post => Object.assign({}, post, {\n        likes_count: post.likes?.length || 0,\n        comments_count: post.comments?.length || 0,\n        is_liked: post.likes?.some(like => like.user_id === currentUserId) || false\n      })) || [];\n      setPosts(postsWithCounts);\n    } catch (error) {\n      Alert.alert(\"Error\", error.message);\n    } finally {\n      setLoading(false);\n    }\n  }\n  async function toggleLike(postId) {\n    try {\n      const post = posts.find(p => p.id === postId);\n      if (!post) return;\n      if (post.is_liked) {\n        await supabase.from(\"likes\").delete().eq(\"post_id\", postId).eq(\"user_id\", currentUserId);\n      } else {\n        await supabase.from(\"likes\").insert({\n          post_id: postId,\n          user_id: currentUserId\n        });\n      }\n      fetchPosts();\n    } catch (error) {\n      Alert.alert(\"Error\", error.message);\n    }\n  }\n  async function togglePin(postId) {\n    try {\n      const {\n        data: existingPin\n      } = await supabase.from(\"pins\").select(\"id\").eq(\"post_id\", postId).eq(\"user_id\", currentUserId).single();\n      if (existingPin) {\n        await supabase.from(\"pins\").delete().eq(\"post_id\", postId).eq(\"user_id\", currentUserId);\n        Alert.alert(\"Success\", \"Post unpinned!\");\n      } else {\n        await supabase.from(\"pins\").insert({\n          post_id: postId,\n          user_id: currentUserId\n        });\n        Alert.alert(\"Success\", \"Post pinned!\");\n      }\n    } catch (error) {\n      Alert.alert(\"Error\", error.message);\n    }\n  }\n  async function fetchComments(postId) {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from(\"comments\").select(`\n          *,\n          profiles (username, full_name)\n        `).eq(\"post_id\", postId).order(\"created_at\", {\n        ascending: true\n      });\n      if (error) throw error;\n      setComments(data || []);\n    } catch (error) {\n      Alert.alert(\"Error\", error.message);\n    }\n  }\n  async function addComment() {\n    if (!newComment.trim() || !selectedPost) return;\n    try {\n      const {\n        error\n      } = await supabase.from(\"comments\").insert({\n        post_id: selectedPost.id,\n        user_id: currentUserId,\n        content: newComment.trim()\n      });\n      if (error) throw error;\n      setNewComment(\"\");\n      fetchComments(selectedPost.id);\n      fetchPosts();\n    } catch (error) {\n      Alert.alert(\"Error\", error.message);\n    }\n  }\n  function openComments(post) {\n    setSelectedPost(post);\n    fetchComments(post.id);\n  }\n  function closeComments() {\n    setSelectedPost(null);\n    setComments([]);\n    setNewComment(\"\");\n  }\n  const renderPost = ({\n    item\n  }) => _jsxDEV(View, {\n    style: styles.postContainer,\n    children: [_jsxDEV(View, {\n      style: styles.postHeader,\n      children: _jsxDEV(View, {\n        style: styles.userInfo,\n        children: [_jsxDEV(View, {\n          style: styles.avatar,\n          children: _jsxDEV(Text, {\n            style: styles.avatarText,\n            children: item.profiles?.username?.charAt(0).toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.username,\n          children: item.profiles?.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), _jsxDEV(Image, {\n      source: {\n        uri: item.image_url\n      },\n      style: styles.postImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.postContent,\n      children: [_jsxDEV(Text, {\n        style: styles.postTitle,\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), item.description && _jsxDEV(Text, {\n        style: styles.postDescription,\n        children: item.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.postActions,\n      children: [_jsxDEV(TouchableOpacity, {\n        style: styles.actionButton,\n        onPress: () => toggleLike(item.id),\n        children: _jsxDEV(Text, {\n          style: [styles.actionText, item.is_liked && styles.liked],\n          children: [\"\\u2764\\uFE0F \", item.likes_count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), _jsxDEV(TouchableOpacity, {\n        style: styles.actionButton,\n        onPress: () => openComments(item),\n        children: _jsxDEV(Text, {\n          style: styles.actionText,\n          children: [\"\\uD83D\\uDCAC \", item.comments_count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), _jsxDEV(TouchableOpacity, {\n        style: styles.actionButton,\n        onPress: () => togglePin(item.id),\n        children: _jsxDEV(Text, {\n          style: styles.actionText,\n          children: \"\\uD83D\\uDCCC Pin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n  if (loading) {\n    return _jsxDEV(View, {\n      style: styles.centered,\n      children: _jsxDEV(Text, {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(FlatList, {\n      data: posts,\n      renderItem: renderPost,\n      keyExtractor: item => item.id,\n      showsVerticalScrollIndicator: false,\n      contentContainerStyle: styles.feedContainer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), _jsxDEV(Modal, {\n      visible: !!selectedPost,\n      animationType: \"slide\",\n      children: _jsxDEV(View, {\n        style: styles.modalContainer,\n        children: [_jsxDEV(View, {\n          style: styles.modalHeader,\n          children: [_jsxDEV(Text, {\n            style: styles.modalTitle,\n            children: \"Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            onPress: closeComments,\n            children: _jsxDEV(Text, {\n              style: styles.closeButton,\n              children: \"\\u2715\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), _jsxDEV(ScrollView, {\n          style: styles.commentsContainer,\n          children: comments.map(comment => _jsxDEV(View, {\n            style: styles.commentItem,\n            children: [_jsxDEV(Text, {\n              style: styles.commentUser,\n              children: comment.profiles?.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this), _jsxDEV(Text, {\n              style: styles.commentText,\n              children: comment.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this)]\n          }, comment.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.commentInput,\n          children: [_jsxDEV(TextInput, {\n            style: styles.input,\n            placeholder: \"Add a comment...\",\n            value: newComment,\n            onChangeText: setNewComment,\n            multiline: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            style: styles.sendButton,\n            onPress: addComment,\n            children: _jsxDEV(Text, {\n              style: styles.sendButtonText,\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  centered: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  feedContainer: {\n    padding: 16\n  },\n  postContainer: {\n    marginBottom: 24,\n    backgroundColor: \"#fff\",\n    borderRadius: 12,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3\n  },\n  postHeader: {\n    padding: 16,\n    paddingBottom: 8\n  },\n  userInfo: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    width: 32,\n    height: 32,\n    borderRadius: 16,\n    backgroundColor: \"#e60023\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginRight: 8\n  },\n  avatarText: {\n    color: \"#fff\",\n    fontWeight: \"bold\"\n  },\n  username: {\n    fontWeight: \"bold\",\n    fontSize: 14\n  },\n  postImage: {\n    width: \"100%\",\n    height: 300,\n    resizeMode: \"cover\"\n  },\n  postContent: {\n    padding: 16\n  },\n  postTitle: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    marginBottom: 4\n  },\n  postDescription: {\n    fontSize: 14,\n    color: \"#666\"\n  },\n  postActions: {\n    flexDirection: \"row\",\n    paddingHorizontal: 16,\n    paddingBottom: 16\n  },\n  actionButton: {\n    marginRight: 16\n  },\n  actionText: {\n    fontSize: 14,\n    color: \"#666\"\n  },\n  liked: {\n    color: \"#e60023\"\n  },\n  modalContainer: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  modalHeader: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: \"#eee\"\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: \"bold\"\n  },\n  closeButton: {\n    fontSize: 18,\n    color: \"#666\"\n  },\n  commentsContainer: {\n    flex: 1,\n    padding: 16\n  },\n  commentItem: {\n    marginBottom: 16\n  },\n  commentUser: {\n    fontWeight: \"bold\",\n    marginBottom: 4\n  },\n  commentText: {\n    color: \"#666\"\n  },\n  commentInput: {\n    flexDirection: \"row\",\n    padding: 16,\n    borderTopWidth: 1,\n    borderTopColor: \"#eee\",\n    alignItems: \"flex-end\"\n  },\n  input: {\n    flex: 1,\n    borderWidth: 1,\n    borderColor: \"#ddd\",\n    borderRadius: 20,\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    marginRight: 8,\n    maxHeight: 100\n  },\n  sendButton: {\n    backgroundColor: \"#e60023\",\n    borderRadius: 20,\n    paddingHorizontal: 16,\n    paddingVertical: 8\n  },\n  sendButtonText: {\n    color: \"#fff\",\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"names":["_jsxFileName","useState","useEffect","View","Text","FlatList","Image","TouchableOpacity","StyleSheet","Alert","TextInput","Modal","ScrollView","supabase","jsxDEV","_jsxDEV","FeedScreen","posts","setPosts","loading","setLoading","selectedPost","setSelectedPost","comments","setComments","newComment","setNewComment","currentUserId","setCurrentUserId","getCurrentUser","fetchPosts","data","user","auth","getUser","id","error","from","select","order","ascending","postsWithCounts","map","post","Object","assign","likes_count","likes","length","comments_count","is_liked","some","like","user_id","alert","message","toggleLike","postId","find","p","delete","eq","insert","post_id","togglePin","existingPin","single","fetchComments","addComment","trim","content","openComments","closeComments","renderPost","item","style","styles","postContainer","children","postHeader","userInfo","avatar","avatarText","profiles","username","charAt","toUpperCase","fileName","lineNumber","columnNumber","source","uri","image_url","postImage","postContent","postTitle","title","description","postDescription","postActions","actionButton","onPress","actionText","liked","centered","container","renderItem","keyExtractor","showsVerticalScrollIndicator","contentContainerStyle","feedContainer","visible","animationType","modalContainer","modalHeader","modalTitle","closeButton","commentsContainer","comment","commentItem","commentUser","commentText","commentInput","input","placeholder","value","onChangeText","multiline","sendButton","sendButtonText","create","flex","backgroundColor","justifyContent","alignItems","padding","marginBottom","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","paddingBottom","flexDirection","marginRight","color","fontWeight","fontSize","resizeMode","paddingHorizontal","borderBottomWidth","borderBottomColor","borderTopWidth","borderTopColor","borderWidth","borderColor","paddingVertical","maxHeight"],"sources":["/Users/sonamdorjighalley/Desktop/SS2025_SWE201_PINTEREST/screens/FeedScreen.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport {\n  View,\n  Text,\n  FlatList,\n  Image,\n  TouchableOpacity,\n  StyleSheet,\n  Alert,\n  TextInput,\n  Modal,\n  ScrollView,\n} from \"react-native\"\nimport { supabase } from \"../lib/supabase\"\nimport type { Post, Comment } from \"../types\"\n\nexport default function FeedScreen() {\n  const [posts, setPosts] = useState<Post[]>([])\n  const [loading, setLoading] = useState(true)\n  const [selectedPost, setSelectedPost] = useState<Post | null>(null)\n  const [comments, setComments] = useState<Comment[]>([])\n  const [newComment, setNewComment] = useState(\"\")\n  const [currentUserId, setCurrentUserId] = useState<string>(\"\")\n\n  useEffect(() => {\n    getCurrentUser()\n    fetchPosts()\n  }, [])\n\n  async function getCurrentUser() {\n    const {\n      data: { user },\n    } = await supabase.auth.getUser()\n    if (user) setCurrentUserId(user.id)\n  }\n\n  async function fetchPosts() {\n    try {\n      const { data, error } = await supabase\n        .from(\"posts\")\n        .select(`\n          *,\n          profiles (username, full_name, avatar_url),\n          likes (id, user_id),\n          comments (id)\n        `)\n        .order(\"created_at\", { ascending: false })\n\n      if (error) throw error\n\n      const postsWithCounts =\n        data?.map((post) => ({\n          ...post,\n          likes_count: post.likes?.length || 0,\n          comments_count: post.comments?.length || 0,\n          is_liked: post.likes?.some((like: any) => like.user_id === currentUserId) || false,\n        })) || []\n\n      setPosts(postsWithCounts)\n    } catch (error: any) {\n      Alert.alert(\"Error\", error.message)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  async function toggleLike(postId: string) {\n    try {\n      const post = posts.find((p) => p.id === postId)\n      if (!post) return\n\n      if (post.is_liked) {\n        await supabase.from(\"likes\").delete().eq(\"post_id\", postId).eq(\"user_id\", currentUserId)\n      } else {\n        await supabase.from(\"likes\").insert({ post_id: postId, user_id: currentUserId })\n      }\n\n      fetchPosts()\n    } catch (error: any) {\n      Alert.alert(\"Error\", error.message)\n    }\n  }\n\n  async function togglePin(postId: string) {\n    try {\n      const { data: existingPin } = await supabase\n        .from(\"pins\")\n        .select(\"id\")\n        .eq(\"post_id\", postId)\n        .eq(\"user_id\", currentUserId)\n        .single()\n\n      if (existingPin) {\n        await supabase.from(\"pins\").delete().eq(\"post_id\", postId).eq(\"user_id\", currentUserId)\n        Alert.alert(\"Success\", \"Post unpinned!\")\n      } else {\n        await supabase.from(\"pins\").insert({ post_id: postId, user_id: currentUserId })\n        Alert.alert(\"Success\", \"Post pinned!\")\n      }\n    } catch (error: any) {\n      Alert.alert(\"Error\", error.message)\n    }\n  }\n\n  async function fetchComments(postId: string) {\n    try {\n      const { data, error } = await supabase\n        .from(\"comments\")\n        .select(`\n          *,\n          profiles (username, full_name)\n        `)\n        .eq(\"post_id\", postId)\n        .order(\"created_at\", { ascending: true })\n\n      if (error) throw error\n      setComments(data || [])\n    } catch (error: any) {\n      Alert.alert(\"Error\", error.message)\n    }\n  }\n\n  async function addComment() {\n    if (!newComment.trim() || !selectedPost) return\n\n    try {\n      const { error } = await supabase.from(\"comments\").insert({\n        post_id: selectedPost.id,\n        user_id: currentUserId,\n        content: newComment.trim(),\n      })\n\n      if (error) throw error\n\n      setNewComment(\"\")\n      fetchComments(selectedPost.id)\n      fetchPosts()\n    } catch (error: any) {\n      Alert.alert(\"Error\", error.message)\n    }\n  }\n\n  function openComments(post: Post) {\n    setSelectedPost(post)\n    fetchComments(post.id)\n  }\n\n  function closeComments() {\n    setSelectedPost(null)\n    setComments([])\n    setNewComment(\"\")\n  }\n\n  const renderPost = ({ item }: { item: Post }) => (\n    <View style={styles.postContainer}>\n      <View style={styles.postHeader}>\n        <View style={styles.userInfo}>\n          <View style={styles.avatar}>\n            <Text style={styles.avatarText}>{item.profiles?.username?.charAt(0).toUpperCase()}</Text>\n          </View>\n          <Text style={styles.username}>{item.profiles?.username}</Text>\n        </View>\n      </View>\n\n      <Image source={{ uri: item.image_url }} style={styles.postImage} />\n\n      <View style={styles.postContent}>\n        <Text style={styles.postTitle}>{item.title}</Text>\n        {item.description && <Text style={styles.postDescription}>{item.description}</Text>}\n      </View>\n\n      <View style={styles.postActions}>\n        <TouchableOpacity style={styles.actionButton} onPress={() => toggleLike(item.id)}>\n          <Text style={[styles.actionText, item.is_liked && styles.liked]}>❤️ {item.likes_count}</Text>\n        </TouchableOpacity>\n\n        <TouchableOpacity style={styles.actionButton} onPress={() => openComments(item)}>\n          <Text style={styles.actionText}>💬 {item.comments_count}</Text>\n        </TouchableOpacity>\n\n        <TouchableOpacity style={styles.actionButton} onPress={() => togglePin(item.id)}>\n          <Text style={styles.actionText}>📌 Pin</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  )\n\n  if (loading) {\n    return (\n      <View style={styles.centered}>\n        <Text>Loading...</Text>\n      </View>\n    )\n  }\n\n  return (\n    <View style={styles.container}>\n      <FlatList\n        data={posts}\n        renderItem={renderPost}\n        keyExtractor={(item) => item.id}\n        showsVerticalScrollIndicator={false}\n        contentContainerStyle={styles.feedContainer}\n      />\n\n      <Modal visible={!!selectedPost} animationType=\"slide\">\n        <View style={styles.modalContainer}>\n          <View style={styles.modalHeader}>\n            <Text style={styles.modalTitle}>Comments</Text>\n            <TouchableOpacity onPress={closeComments}>\n              <Text style={styles.closeButton}>✕</Text>\n            </TouchableOpacity>\n          </View>\n\n          <ScrollView style={styles.commentsContainer}>\n            {comments.map((comment) => (\n              <View key={comment.id} style={styles.commentItem}>\n                <Text style={styles.commentUser}>{comment.profiles?.username}</Text>\n                <Text style={styles.commentText}>{comment.content}</Text>\n              </View>\n            ))}\n          </ScrollView>\n\n          <View style={styles.commentInput}>\n            <TextInput\n              style={styles.input}\n              placeholder=\"Add a comment...\"\n              value={newComment}\n              onChangeText={setNewComment}\n              multiline\n            />\n            <TouchableOpacity style={styles.sendButton} onPress={addComment}>\n              <Text style={styles.sendButtonText}>Send</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </Modal>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n  },\n  centered: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  feedContainer: {\n    padding: 16,\n  },\n  postContainer: {\n    marginBottom: 24,\n    backgroundColor: \"#fff\",\n    borderRadius: 12,\n    shadowColor: \"#000\",\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  postHeader: {\n    padding: 16,\n    paddingBottom: 8,\n  },\n  userInfo: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    width: 32,\n    height: 32,\n    borderRadius: 16,\n    backgroundColor: \"#e60023\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginRight: 8,\n  },\n  avatarText: {\n    color: \"#fff\",\n    fontWeight: \"bold\",\n  },\n  username: {\n    fontWeight: \"bold\",\n    fontSize: 14,\n  },\n  postImage: {\n    width: \"100%\",\n    height: 300,\n    resizeMode: \"cover\",\n  },\n  postContent: {\n    padding: 16,\n  },\n  postTitle: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    marginBottom: 4,\n  },\n  postDescription: {\n    fontSize: 14,\n    color: \"#666\",\n  },\n  postActions: {\n    flexDirection: \"row\",\n    paddingHorizontal: 16,\n    paddingBottom: 16,\n  },\n  actionButton: {\n    marginRight: 16,\n  },\n  actionText: {\n    fontSize: 14,\n    color: \"#666\",\n  },\n  liked: {\n    color: \"#e60023\",\n  },\n  modalContainer: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n  },\n  modalHeader: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: \"#eee\",\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n  },\n  closeButton: {\n    fontSize: 18,\n    color: \"#666\",\n  },\n  commentsContainer: {\n    flex: 1,\n    padding: 16,\n  },\n  commentItem: {\n    marginBottom: 16,\n  },\n  commentUser: {\n    fontWeight: \"bold\",\n    marginBottom: 4,\n  },\n  commentText: {\n    color: \"#666\",\n  },\n  commentInput: {\n    flexDirection: \"row\",\n    padding: 16,\n    borderTopWidth: 1,\n    borderTopColor: \"#eee\",\n    alignItems: \"flex-end\",\n  },\n  input: {\n    flex: 1,\n    borderWidth: 1,\n    borderColor: \"#ddd\",\n    borderRadius: 20,\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    marginRight: 8,\n    maxHeight: 100,\n  },\n  sendButton: {\n    backgroundColor: \"#e60023\",\n    borderRadius: 20,\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n  },\n  sendButtonText: {\n    color: \"#fff\",\n    fontWeight: \"bold\",\n  },\n})\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}